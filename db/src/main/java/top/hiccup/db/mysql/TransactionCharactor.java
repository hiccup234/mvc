package top.hiccup.db.mysql;

/**
 * 数据库事务特性ACID：
 *
 * 【atomicity：原子性】
 * 一个事务必须被视为不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚
 *
 * 【consistency：一致性】
 * 数据库总是从一个一致性的状态转换到另外一个一致性的状态
 *
 * 【isolation：隔离性】
 * 不同的事务需要遵循一定的隔离级别
 *
 * 【durability：持久性】
 * 一旦事务提交，其所作的修改就应该永久保存在数据库中（持久化到磁盘），即使系统崩溃，修改的数据也不会丢失
 *
 * =====================================================================================================================
 * 原子性和一致性的区别？
 * 原子性：侧重于事务执行的完整性（只要有一个操作失败，那么整个事务就要回滚）
 * 一致性：侧重于事务的执行结果是按预期生效的（对比缓存一致性协议和能量守恒定律）
 *
 * 举个栗子：
 * 张三给李四转账100元。数据库假设需要张三扣100，李四加100，记录一条流水。
 * 如果流水没记录成功，那整体回滚，张三没扣钱，李四也没多钱，这就是原子性的体现。
 * 而张三必须扣100，李四必须加100，这个就是一致性了，如果因为某些逻辑原因，导致张三扣了100，流水记录100转账，
 * 而李四只加了60，然后这3条操作都成功了，那原子性就符合了，但是不符合一致性。
 *
 * @author wenhy
 * @date 2019/4/12
 */
public class TransactionCharactor {
}
